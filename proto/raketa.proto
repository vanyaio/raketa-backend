syntax = "proto3";

package raketa;

option go_package = "github.com/vanyaio/raketa-backend/proto;raketapb";

import "google/api/annotations.proto";

service RaketaService {
    rpc SignUp(SignUpRequest) returns (SignUpResponse) {
        option (google.api.http) = {
            post: "/users/sign-up"
            body: "*"
        };
    };
    rpc GetUserRole(GetUserRoleRequest) returns (GetUserRoleResponse) {
        option (google.api.http) = {
            get: "/users/role/{username}"
        };
    };
    rpc GetUserStats(GetUserStatsRequest) returns (GetUserStatsResponse) {
        option (google.api.http) = {
            get: "/users/stats/{user_id}"
        };
    };
    rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {
        option (google.api.http) = {
            post: "/tasks/create"
            body: "*"
        };
    };
    rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse) {
        option (google.api.http) = {
            delete: "/tasks/delete"
        };
    };
    rpc AssignUser(AssignUserRequest) returns (AssignUserResponse) {
        option (google.api.http) = {
            patch: "/users/assign"
            body: "*"
        };
    };
    rpc CloseTask(CloseTaskRequest) returns (CloseTaskResponse) {
        option (google.api.http) = {
            patch: "/tasks/close"
            body: "*"
        };
    };
    rpc GetUnassignTasks(GetUnassignTasksRequest) returns (GetUnassignTasksResponse) {
        option (google.api.http) = {
            get: "/tasks/unassign"
        };
    };
    rpc SetTaskPrice(SetTaskPriceRequest) returns (SetTaskPriceResponse) {
        option (google.api.http) = {
            patch: "/tasks/price"
            body: "*"
        };
    };
}

message SignUpRequest{
    int64 id = 1;
    string username = 2;
}

message SignUpResponse {}

message GetUserRoleRequest {
    string username = 1;
}

message GetUserRoleResponse {
    enum Role {
        UNKNOWN = 0;
        REGULAR = 1;
        ADMIN = 2;
    }
    Role role = 1;
}

message GetUserStatsRequest {
    int64 user_id = 1;
}

message GetUserStatsResponse {
    int64 closed_tasks_count = 1;
}

message CreateTaskRequest {
    string url = 1;
}

message CreateTaskResponse {}

message DeleteTaskRequest {
    string url = 1;
}

message DeleteTaskResponse {}

message AssignUserRequest {
    string url = 1;
    string username = 2;
}

message AssignUserResponse {}

message CloseTaskRequest {
    string url = 1;
}

message CloseTaskResponse {}

message GetUnassignTasksRequest {}

message GetUnassignTasksResponse {
    repeated Task tasks = 1;
}

message Task {
    enum Status {
        UNKNOWN = 0;
        OPEN = 1;
        CLOSED = 2;
        DECLINED = 3;
    }
    string url = 1;
    int64 user_id = 2;
    Status status = 3;
    uint64 price = 4;
}

message SetTaskPriceRequest {
    string url = 1;
    uint64 price = 2;
}

message SetTaskPriceResponse {}